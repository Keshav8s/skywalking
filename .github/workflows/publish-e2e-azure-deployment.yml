# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: E2E deployment using CI/CD for SkyWalking

on:
  push:
    branches:
      - skywalking-azure

jobs:
  build-and-push:
    if: github.repository == 'Keshav8s/skywalking'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 90
    env:
      TAG: ${{ github.sha }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Load Environment Variables
      run: source docker/.env

    # - name: Set DIST variable
    #   run: echo "DIST=apache-skywalking-apm-bin.tar.gz" >> $GITHUB_ENV

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Run `make docker` to generate distribution tarball
      run: make docker SKIP_TEST=true

    - name: Build OAP Docker Image
      run: |
       cd docker
       pwd
       ls -la
       # docker build --build-arg DIST=$DIST -t ghcr.io/keshav8s/skywalking/oap:${{ github.sha }} -f docker/oap/Dockerfile .
       docker build -f oap/Dockerfile -t ghcr.io/keshav8s/skywalking/oap:${{ github.sha }} .
      
    - name: Push OAP Docker Image
      run: |
       docker push ghcr.io/keshav8s/skywalking/oap:${{ github.sha }}
      
    - name: Build UI Docker Image
      run: |
       docker build --build-arg DIST=$DIST -t ghcr.io/keshav8s/skywalking/ui:${{ github.sha }} -f docker/ui/Dockerfile .
      
    - name: Push UI Docker Image
      run: |
       docker push ghcr.io/keshav8s/skywalking/ui:${{ github.sha }}
      

    # - name: Build and Push Docker Image
    #   run: |
        # cd docker
        # pwd
        # ls -la
        
        # docker build -f oap/Dockerfile -t ghcr.io/keshav8s/skywalking-oap:${{ github.sha }} .
        # docker build -t ghcr.io/keshav8s/skywalking/ui:${{ github.sha }} -f ui/Dockerfile .
        
        # docker push $OAP_IMAGE
        # docker push $UI_IMAGE

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH into Azure VM and Deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/skywalking
          
            # Pull the latest code
            git pull origin main
          
            cd ~/skywalking/docker
            # Pull the pre-built Docker image from GitHub Container Registry
            docker pull ghcr.io/${{ github.actor }}/skywalking:${{ github.sha }}
      
            # Update Docker Compose to use the pulled image
            sed -i 's|image: .*|image: ghcr.io/${{ github.actor }}/skywalking:${{ github.sha }}|' docker/docker-compose.yml
  
            # Run the updated containers
            cd docker
            docker-compose --profile elasticsearch up -d
